<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>NoMethodError at &#x2F;post</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table {
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td {
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol {
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li {
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #summary ul#quicklinks { list-style-type: none; margin-bottom: 2em; }
    #summary ul#quicklinks li { float: left; padding: 0 1em; }
    #summary ul#quicklinks>li+li { border-left: 1px #666 solid; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon;
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\\-");
        var oRegExp = new RegExp("(^|\\s)" + strClassName + "(\\s|$$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>NoMethodError at &#x2F;post</h1>
  <h2>undefined method `[]&#x27; for nil:NilClass</h2>
  <table><tr>
    <th>Ruby</th>
    <td>

      <code>&#x2F;home&#x2F;huang&#x2F;projects&#x2F;1DHandwritingServer&#x2F;config.ru</code>: in <code>block (2 levels) in &lt;main&gt;</code>, line 70

    </td>
  </tr><tr>
    <th>Web</th>
    <td><code>POST 127.0.0.1&#x2F;post</code></td>
  </tr></table>

  <h3>Jump to:</h3>
  <ul id="quicklinks">
    <li><a href="#get-info">GET</a></li>
    <li><a href="#post-info">POST</a></li>
    <li><a href="#cookie-info">Cookies</a></li>
    <li><a href="#env-info">ENV</a></li>
  </ul>
</div>

<div id="traceback">
  <h2>Traceback <span>(innermost first)</span></h2>
  <ul class="traceback">

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;projects&#x2F;1DHandwritingServer&#x2F;config.ru</code>: in <code>block (2 levels) in &lt;main&gt;</code>

          
          <div class="context" id="c11376580">
              
              <ol start="63" class="pre-context" id="pre11376580">
                
                <li onclick="toggle('pre11376580', 'post11376580')">      best_file.close
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">    end
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">    best_file = File.open(&#x27;data&#x2F;best_char&#x27;, &#x27;r&#x27;)
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">    old_best_content = best_file.read.to_s
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">    best_file.close
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">    old_best_array = JSON.parse old_best_content
</li>
                
              </ol>
              

            <ol start="70" class="context-line">
              <li onclick="toggle('pre11376580', 'post11376580')">    char_tasks = hash[&#x27;char_task&#x27;]#array<span>...</span></li></ol>

              
              <ol start='71' class="post-context" id="post11376580">
                
                <li onclick="toggle('pre11376580', 'post11376580')">    char_tasks.each do |task|#hash
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">      mode = task[&#x27;mode&#x27;]#int
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">      if mode == 1#reciting mode
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">        letter = task[&#x27;letter&#x27;]#string
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">        spent_time = count_spent_time task
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">        single_hash = old_best_array[letter.ord - &#x27;a&#x27;.ord]
</li>
                
                <li onclick="toggle('pre11376580', 'post11376580')">        single_hash[&#x27;best_score&#x27;] = [single_hash[&#x27;best_score&#x27;], spent_time].min
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;tempfile_reaper.rb</code>: in <code>call</code>

          
          <div class="context" id="c11376140">
              
              <ol start="8" class="pre-context" id="pre11376140">
                
                <li onclick="toggle('pre11376140', 'post11376140')">  class TempfileReaper
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">    def initialize(app)
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">      @app = app
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">    end
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">    def call(env)
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">      env[&#x27;rack.tempfiles&#x27;] ||= []
</li>
                
              </ol>
              

            <ol start="15" class="context-line">
              <li onclick="toggle('pre11376140', 'post11376140')">      status, headers, body = @app.call(env)<span>...</span></li></ol>

              
              <ol start='16' class="post-context" id="post11376140">
                
                <li onclick="toggle('pre11376140', 'post11376140')">      body_proxy = BodyProxy.new(body) do
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">        env[&#x27;rack.tempfiles&#x27;].each { |f| f.close! } unless env[&#x27;rack.tempfiles&#x27;].nil?
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">      end
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">      [status, headers, body_proxy]
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">    end
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">  end
</li>
                
                <li onclick="toggle('pre11376140', 'post11376140')">end
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;tempfile_reaper.rb</code>: in <code>call</code>

          
          <div class="context" id="c11341160">
              
              <ol start="8" class="pre-context" id="pre11341160">
                
                <li onclick="toggle('pre11341160', 'post11341160')">  class TempfileReaper
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">    def initialize(app)
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">      @app = app
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">    end
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">    def call(env)
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">      env[&#x27;rack.tempfiles&#x27;] ||= []
</li>
                
              </ol>
              

            <ol start="15" class="context-line">
              <li onclick="toggle('pre11341160', 'post11341160')">      status, headers, body = @app.call(env)<span>...</span></li></ol>

              
              <ol start='16' class="post-context" id="post11341160">
                
                <li onclick="toggle('pre11341160', 'post11341160')">      body_proxy = BodyProxy.new(body) do
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">        env[&#x27;rack.tempfiles&#x27;].each { |f| f.close! } unless env[&#x27;rack.tempfiles&#x27;].nil?
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">      end
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">      [status, headers, body_proxy]
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">    end
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">  end
</li>
                
                <li onclick="toggle('pre11341160', 'post11341160')">end
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;lint.rb</code>: in <code>_call</code>

          
          <div class="context" id="c11339560">
              
              <ol start="42" class="pre-context" id="pre11339560">
                
                <li onclick="toggle('pre11339560', 'post11339560')">      assert(&quot;No env given&quot;) { env }
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">      check_env env
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">      env[&#x27;rack.input&#x27;] = InputWrapper.new(env[&#x27;rack.input&#x27;])
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">      env[&#x27;rack.errors&#x27;] = ErrorWrapper.new(env[&#x27;rack.errors&#x27;])
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">      ## and returns an Array of exactly three values:
</li>
                
              </ol>
              

            <ol start="49" class="context-line">
              <li onclick="toggle('pre11339560', 'post11339560')">      status, headers, @body = @app.call(env)<span>...</span></li></ol>

              
              <ol start='50' class="post-context" id="post11339560">
                
                <li onclick="toggle('pre11339560', 'post11339560')">      ## The *status*,
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">      check_status status
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">      ## the *headers*,
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">      check_headers headers
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">      check_hijack_response headers, env
</li>
                
                <li onclick="toggle('pre11339560', 'post11339560')">
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;lint.rb</code>: in <code>call</code>

          
          <div class="context" id="c11285700">
              
              <ol start="30" class="pre-context" id="pre11285700">
                
                <li onclick="toggle('pre11285700', 'post11285700')">    ## after to catch all mistakes.
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">    ## = Rack applications
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">    ## A Rack application is a Ruby object (not a class) that
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">    ## responds to +call+.
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">    def call(env=nil)
</li>
                
              </ol>
              

            <ol start="37" class="context-line">
              <li onclick="toggle('pre11285700', 'post11285700')">      dup._call(env)<span>...</span></li></ol>

              
              <ol start='38' class="post-context" id="post11285700">
                
                <li onclick="toggle('pre11285700', 'post11285700')">    end
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">    def _call(env)
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">      ## It takes exactly one argument, the *environment*
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">      assert(&quot;No env given&quot;) { env }
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">      check_env env
</li>
                
                <li onclick="toggle('pre11285700', 'post11285700')">
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;showexceptions.rb</code>: in <code>call</code>

          
          <div class="context" id="c11224180">
              
              <ol start="17" class="pre-context" id="pre11224180">
                
                <li onclick="toggle('pre11224180', 'post11224180')">
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">    def initialize(app)
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">      @app = app
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">      @template = ERB.new(TEMPLATE)
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">    end
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">    def call(env)
</li>
                
              </ol>
              

            <ol start="24" class="context-line">
              <li onclick="toggle('pre11224180', 'post11224180')">      @app.call(env)<span>...</span></li></ol>

              
              <ol start='25' class="post-context" id="post11224180">
                
                <li onclick="toggle('pre11224180', 'post11224180')">    rescue StandardError, LoadError, SyntaxError =&gt; e
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">      exception_string = dump_exception(e)
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">      env[&quot;rack.errors&quot;].puts(exception_string)
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">      env[&quot;rack.errors&quot;].flush
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">
</li>
                
                <li onclick="toggle('pre11224180', 'post11224180')">      if accepts_html?(env)
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;commonlogger.rb</code>: in <code>call</code>

          
          <div class="context" id="c11140360">
              
              <ol start="26" class="pre-context" id="pre11140360">
                
                <li onclick="toggle('pre11140360', 'post11140360')">    def initialize(app, logger=nil)
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">      @app = app
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">      @logger = logger
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">    end
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">    def call(env)
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">      began_at = Time.now
</li>
                
              </ol>
              

            <ol start="33" class="context-line">
              <li onclick="toggle('pre11140360', 'post11140360')">      status, header, body = @app.call(env)<span>...</span></li></ol>

              
              <ol start='34' class="post-context" id="post11140360">
                
                <li onclick="toggle('pre11140360', 'post11140360')">      header = Utils::HeaderHash.new(header)
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">      body = BodyProxy.new(body) { log(env, status, header, began_at) }
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">      [status, header, body]
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">    end
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">    private
</li>
                
                <li onclick="toggle('pre11140360', 'post11140360')">
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;chunked.rb</code>: in <code>call</code>

          
          <div class="context" id="c11136380">
              
              <ol start="47" class="pre-context" id="pre11136380">
                
                <li onclick="toggle('pre11136380', 'post11136380')">        false
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">      else
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">        true
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">      end
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">    end
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">    def call(env)
</li>
                
              </ol>
              

            <ol start="54" class="context-line">
              <li onclick="toggle('pre11136380', 'post11136380')">      status, headers, body = @app.call(env)<span>...</span></li></ol>

              
              <ol start='55' class="post-context" id="post11136380">
                
                <li onclick="toggle('pre11136380', 'post11136380')">      headers = HeaderHash.new(headers)
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">      if ! chunkable_version?(env[&#x27;HTTP_VERSION&#x27;]) ||
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">         STATUS_WITH_NO_ENTITY_BODY.include?(status) ||
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">         headers[CONTENT_LENGTH] ||
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">         headers[&#x27;Transfer-Encoding&#x27;]
</li>
                
                <li onclick="toggle('pre11136380', 'post11136380')">        [status, headers, body]
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;content_length.rb</code>: in <code>call</code>

          
          <div class="context" id="c11124480">
              
              <ol start="8" class="pre-context" id="pre11124480">
                
                <li onclick="toggle('pre11124480', 'post11124480')">    include Rack::Utils
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">    def initialize(app)
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">      @app = app
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">    end
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">    def call(env)
</li>
                
              </ol>
              

            <ol start="15" class="context-line">
              <li onclick="toggle('pre11124480', 'post11124480')">      status, headers, body = @app.call(env)<span>...</span></li></ol>

              
              <ol start='16' class="post-context" id="post11124480">
                
                <li onclick="toggle('pre11124480', 'post11124480')">      headers = HeaderHash.new(headers)
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">      if !STATUS_WITH_NO_ENTITY_BODY.include?(status.to_i) &amp;&amp;
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">         !headers[CONTENT_LENGTH] &amp;&amp;
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">         !headers[&#x27;Transfer-Encoding&#x27;] &amp;&amp;
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">         body.respond_to?(:to_ary)
</li>
                
                <li onclick="toggle('pre11124480', 'post11124480')">
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;handler&#x2F;webrick.rb</code>: in <code>service</code>

          
          <div class="context" id="c11121200">
              
              <ol start="81" class="pre-context" id="pre11121200">
                
                <li onclick="toggle('pre11121200', 'post11121200')">        env[QUERY_STRING] ||= &quot;&quot;
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">        unless env[PATH_INFO] == &quot;&quot;
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">          path, n = req.request_uri.path, env[&quot;SCRIPT_NAME&quot;].length
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">          env[PATH_INFO] = path[n, path.length-n]
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">        end
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">        env[&quot;REQUEST_PATH&quot;] ||= [env[&quot;SCRIPT_NAME&quot;], env[PATH_INFO]].join
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">
</li>
                
              </ol>
              

            <ol start="88" class="context-line">
              <li onclick="toggle('pre11121200', 'post11121200')">        status, headers, body = @app.call(env)<span>...</span></li></ol>

              
              <ol start='89' class="post-context" id="post11121200">
                
                <li onclick="toggle('pre11121200', 'post11121200')">        begin
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">          res.status = status.to_i
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">          headers.each { |k, vs|
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">            next if k.downcase == &quot;rack.hijack&quot;
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">            if k.downcase == &quot;set-cookie&quot;
</li>
                
                <li onclick="toggle('pre11121200', 'post11121200')">              res.cookies.concat vs.split(&quot;\n&quot;)
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;rubies&#x2F;ruby-2.2.2&#x2F;lib&#x2F;ruby&#x2F;2.2.0&#x2F;webrick&#x2F;httpserver.rb</code>: in <code>service</code>

          
          <div class="context" id="c11116460">
              
              <ol start="131" class="pre-context" id="pre11116460">
                
                <li onclick="toggle('pre11116460', 'post11116460')">
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">      servlet, options, script_name, path_info = search_servlet(req.path)
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">      raise HTTPStatus::NotFound, &quot;`#{req.path}&#x27; not found.&quot; unless servlet
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">      req.script_name = script_name
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">      req.path_info = path_info
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">      si = servlet.get_instance(self, *options)
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">      @logger.debug(format(&quot;%s is invoked.&quot;, si.class.name))
</li>
                
              </ol>
              

            <ol start="138" class="context-line">
              <li onclick="toggle('pre11116460', 'post11116460')">      si.service(req, res)<span>...</span></li></ol>

              
              <ol start='139' class="post-context" id="post11116460">
                
                <li onclick="toggle('pre11116460', 'post11116460')">    end
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">    ##
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">    # The default OPTIONS request handler says GET, HEAD, POST and OPTIONS
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">    # requests are allowed.
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">
</li>
                
                <li onclick="toggle('pre11116460', 'post11116460')">    def do_OPTIONS(req, res)
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;rubies&#x2F;ruby-2.2.2&#x2F;lib&#x2F;ruby&#x2F;2.2.0&#x2F;webrick&#x2F;httpserver.rb</code>: in <code>run</code>

          
          <div class="context" id="c11106600">
              
              <ol start="87" class="pre-context" id="pre11106600">
                
                <li onclick="toggle('pre11106600', 'post11106600')">          if callback = server[:RequestCallback]
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">            callback.call(req, res)
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">          elsif callback = server[:RequestHandler]
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">            msg = &quot;:RequestHandler is deprecated, please use :RequestCallback&quot;
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">            @logger.warn(msg)
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">            callback.call(req, res)
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">          end
</li>
                
              </ol>
              

            <ol start="94" class="context-line">
              <li onclick="toggle('pre11106600', 'post11106600')">          server.service(req, res)<span>...</span></li></ol>

              
              <ol start='95' class="post-context" id="post11106600">
                
                <li onclick="toggle('pre11106600', 'post11106600')">        rescue HTTPStatus::EOFError, HTTPStatus::RequestTimeout =&gt; ex
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">          res.set_error(ex)
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">        rescue HTTPStatus::Error =&gt; ex
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">          @logger.error(ex.message)
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">          res.set_error(ex)
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">        rescue HTTPStatus::Status =&gt; ex
</li>
                
                <li onclick="toggle('pre11106600', 'post11106600')">          res.status = ex.code
</li>
                
              </ol>
              
          </div>
          
      </li>

      <li class="frame">
        <code>&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;rubies&#x2F;ruby-2.2.2&#x2F;lib&#x2F;ruby&#x2F;2.2.0&#x2F;webrick&#x2F;server.rb</code>: in <code>block in start_thread</code>

          
          <div class="context" id="c11071920">
              
              <ol start="287" class="pre-context" id="pre11071920">
                
                <li onclick="toggle('pre11071920', 'post11071920')">            addr = sock.peeraddr
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">            @logger.debug &quot;accept: #{addr[3]}:#{addr[1]}&quot;
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">          rescue SocketError
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">            @logger.debug &quot;accept: &lt;address unknown&gt;&quot;
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">            raise
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">          end
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">          call_callback(:AcceptCallback, sock)
</li>
                
              </ol>
              

            <ol start="294" class="context-line">
              <li onclick="toggle('pre11071920', 'post11071920')">          block ? block.call(sock) : run(sock)<span>...</span></li></ol>

              
              <ol start='295' class="post-context" id="post11071920">
                
                <li onclick="toggle('pre11071920', 'post11071920')">        rescue Errno::ENOTCONN
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">          @logger.debug &quot;Errno::ENOTCONN raised&quot;
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">        rescue ServerError =&gt; ex
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">          msg = &quot;#{ex.class}: #{ex.message}\n\t#{ex.backtrace[0]}&quot;
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">          @logger.error msg
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">        rescue Exception =&gt; ex
</li>
                
                <li onclick="toggle('pre11071920', 'post11071920')">          @logger.error ex
</li>
                
              </ol>
              
          </div>
          
      </li>

  </ul>
</div>

<div id="requestinfo">
  <h2>Request information</h2>

  <h3 id="get-info">GET</h3>
  
    <p>No GET data.</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data.</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data.</p>
  

  <h3 id="env-info">Rack ENV</h3>
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
          
          <tr>
            <td>CONTENT_LENGTH</td>
            <td class="code"><div>369</div></td>
          </tr>
          
          <tr>
            <td>CONTENT_TYPE</td>
            <td class="code"><div>application&#x2F;x-www-form-urlencoded</div></td>
          </tr>
          
          <tr>
            <td>GATEWAY_INTERFACE</td>
            <td class="code"><div>CGI&#x2F;1.1</div></td>
          </tr>
          
          <tr>
            <td>HTTP_ACCEPT</td>
            <td class="code"><div>*&#x2F;*</div></td>
          </tr>
          
          <tr>
            <td>HTTP_HOST</td>
            <td class="code"><div>127.0.0.1:9292</div></td>
          </tr>
          
          <tr>
            <td>HTTP_USER_AGENT</td>
            <td class="code"><div>curl&#x2F;7.35.0</div></td>
          </tr>
          
          <tr>
            <td>HTTP_VERSION</td>
            <td class="code"><div>HTTP&#x2F;1.1</div></td>
          </tr>
          
          <tr>
            <td>PATH_INFO</td>
            <td class="code"><div>&#x2F;post</div></td>
          </tr>
          
          <tr>
            <td>QUERY_STRING</td>
            <td class="code"><div></div></td>
          </tr>
          
          <tr>
            <td>REMOTE_ADDR</td>
            <td class="code"><div>127.0.0.1</div></td>
          </tr>
          
          <tr>
            <td>REMOTE_HOST</td>
            <td class="code"><div>localhost</div></td>
          </tr>
          
          <tr>
            <td>REQUEST_METHOD</td>
            <td class="code"><div>POST</div></td>
          </tr>
          
          <tr>
            <td>REQUEST_PATH</td>
            <td class="code"><div>&#x2F;post</div></td>
          </tr>
          
          <tr>
            <td>REQUEST_URI</td>
            <td class="code"><div>http:&#x2F;&#x2F;127.0.0.1:9292&#x2F;post</div></td>
          </tr>
          
          <tr>
            <td>SCRIPT_NAME</td>
            <td class="code"><div></div></td>
          </tr>
          
          <tr>
            <td>SERVER_NAME</td>
            <td class="code"><div>127.0.0.1</div></td>
          </tr>
          
          <tr>
            <td>SERVER_PORT</td>
            <td class="code"><div>9292</div></td>
          </tr>
          
          <tr>
            <td>SERVER_PROTOCOL</td>
            <td class="code"><div>HTTP&#x2F;1.1</div></td>
          </tr>
          
          <tr>
            <td>SERVER_SOFTWARE</td>
            <td class="code"><div>WEBrick&#x2F;1.3.1 (Ruby&#x2F;2.2.2&#x2F;2015-04-13)</div></td>
          </tr>
          
          <tr>
            <td>rack.errors</td>
            <td class="code"><div>#&lt;Rack::Lint::ErrorWrapper:0x000000015c5228 @error=#&lt;IO:&lt;STDERR&gt;&gt;&gt;</div></td>
          </tr>
          
          <tr>
            <td>rack.hijack</td>
            <td class="code"><div>#&lt;Proc:0x000000015c5660@&#x2F;home&#x2F;huang&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.2.2&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;lint.rb:525&gt;</div></td>
          </tr>
          
          <tr>
            <td>rack.hijack?</td>
            <td class="code"><div>true</div></td>
          </tr>
          
          <tr>
            <td>rack.hijack_io</td>
            <td class="code"><div>nil</div></td>
          </tr>
          
          <tr>
            <td>rack.input</td>
            <td class="code"><div>#&lt;Rack::Lint::InputWrapper:0x000000015c5250 @input=#&lt;StringIO:0x000000015d09e8&gt;&gt;</div></td>
          </tr>
          
          <tr>
            <td>rack.multiprocess</td>
            <td class="code"><div>false</div></td>
          </tr>
          
          <tr>
            <td>rack.multithread</td>
            <td class="code"><div>true</div></td>
          </tr>
          
          <tr>
            <td>rack.request.cookie_hash</td>
            <td class="code"><div>{}</div></td>
          </tr>
          
          <tr>
            <td>rack.request.form_hash</td>
            <td class="code"><div>{}</div></td>
          </tr>
          
          <tr>
            <td>rack.request.form_input</td>
            <td class="code"><div>#&lt;Rack::Lint::InputWrapper:0x000000015c5250 @input=#&lt;StringIO:0x000000015d09e8&gt;&gt;</div></td>
          </tr>
          
          <tr>
            <td>rack.request.form_vars</td>
            <td class="code"><div></div></td>
          </tr>
          
          <tr>
            <td>rack.request.query_hash</td>
            <td class="code"><div>{}</div></td>
          </tr>
          
          <tr>
            <td>rack.request.query_string</td>
            <td class="code"><div></div></td>
          </tr>
          
          <tr>
            <td>rack.run_once</td>
            <td class="code"><div>false</div></td>
          </tr>
          
          <tr>
            <td>rack.tempfiles</td>
            <td class="code"><div>[]</div></td>
          </tr>
          
          <tr>
            <td>rack.url_scheme</td>
            <td class="code"><div>http</div></td>
          </tr>
          
          <tr>
            <td>rack.version</td>
            <td class="code"><div>[1, 3]</div></td>
          </tr>
          
      </tbody>
    </table>

</div>

<div id="explanation">
  <p>
    You're seeing this error because you use <code>Rack::ShowExceptions</code>.
  </p>
</div>

</body>
</html>
